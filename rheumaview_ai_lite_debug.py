
import streamlit as st
from PIL import Image
import os
from collections import defaultdict

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞–º
def classify_region(filename, image=None):
    fname = filename.lower()

    # 1. –ü–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
    if any(k in fname for k in ["cerv", "c-spine"]):
        return "Cervical Spine"
    elif any(k in fname for k in ["thor", "t-spine"]):
        return "Thoracic Spine"
    elif any(k in fname for k in ["lum", "l-spine"]):
        return "Lumbar Spine"
    elif "sacro" in fname or "si" in fname or "sij" in fname:
        return "SI Joints / Pelvis"
    elif "pelvis" in fname or "iliac" in fname:
        return "SI Joints / Pelvis"
    elif "hand" in fname or "mcp" in fname or "wrist" in fname:
        return "Hands"
    elif "foot" in fname or "mtp" in fname:
        return "Feet"
    elif "knee" in fname:
        return "Knees"
    elif "shoulder" in fname:
        return "Shoulders"
    elif "hip" in fname:
        return "Hips"

    # 2. –ü–æ —Ä–∞–∑–º–µ—Ä—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if image:
        width, height = image.size
        ratio = height / width if width else 0

        if ratio > 1.5:
            return "Spine (Tall Image)"
        elif width > 1200 and height > 900:
            return "Pelvis / SI Joints"
        elif width < 600 and height < 600:
            return "Hands or Feet"
        elif 0.8 < ratio < 1.2 and width > 800:
            return "Chest or Pelvis (Square)"
    return "Unknown"

st.set_page_config(page_title="RheumaView-lite v3", page_icon="üß†", layout="wide")
st.title("üß† RheumaView-lite Debug App v3")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–Ω–∞—Ç–æ–º–∏—á–µ—Å–∫–∏–π —Ä–µ–≥–∏–æ–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏/–∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

uploaded_files = st.file_uploader(
    "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPG, PNG, WEBP, BMP, TIFF)", 
    type=["jpg", "jpeg", "png", "webp", "bmp", "tif", "tiff"], 
    accept_multiple_files=True
)

if uploaded_files:
    st.success(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files)}")

    grouped = defaultdict(list)
    for file in uploaded_files:
        try:
            image = Image.open(file)
            region = classify_region(file.name, image)
            grouped[region].append((file.name, image.copy()))
        except:
            grouped["Unreadable"].append((file.name, None))

    for region, entries in grouped.items():
        st.subheader(f"üìÇ {region} ‚Äì {len(entries)} —Ñ–∞–π–ª(–æ–≤)")
        cols = st.columns(3)
        for i, (fname, img) in enumerate(entries):
            with cols[i % 3]:
                if img:
                    st.image(img, caption=fname, width=250)
                else:
                    st.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å: {fname}")
else:
    st.info("–§–∞–π–ª—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
